(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}})();function D(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function N(e){if(e.__esModule)return e;var t=e.default;if(typeof t=="function"){var n=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach(function(s){var o=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:function(){return e[s]}})}),n}var u={exports:{}};const w={},O=Object.freeze(Object.defineProperty({__proto__:null,default:w},Symbol.toStringTag,{value:"Module"})),v=N(O),I="dotenv",V="16.4.5",T="Loads environment variables from .env file",$="lib/main.js",j="lib/main.d.ts",A={".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},L={"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},x={type:"git",url:"git://github.com/motdotla/dotenv.git"},K="https://dotenvx.com",P=["dotenv","env",".env","environment","variables","config","settings"],k="README.md",R="BSD-2-Clause",Y={"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},S={node:">=12"},B={fs:!1},M={name:I,version:V,description:T,main:$,types:j,exports:A,scripts:L,repository:x,funding:K,keywords:P,readmeFilename:k,license:R,devDependencies:Y,engines:S,browser:B};var p={};const h=v,y=v,F=v,U=v,C=M,m=C.version,q=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function W(e){const t={};let n=e.toString();n=n.replace(/\r\n?/mg,`
`);let s;for(;(s=q.exec(n))!=null;){const o=s[1];let r=s[2]||"";r=r.trim();const c=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),c==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),t[o]=r}return t}function G(e){const t=b(e),n=i.configDotenv({path:t});if(!n.parsed){const c=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw c.code="MISSING_DATA",c}const s=_(e).split(","),o=s.length;let r;for(let c=0;c<o;c++)try{const a=s[c].trim(),l=H(n,a);r=i.decrypt(l.ciphertext,l.key);break}catch(a){if(c+1>=o)throw a}return i.parse(r)}function J(e){console.log(`[dotenv@${m}][INFO] ${e}`)}function Q(e){console.log(`[dotenv@${m}][WARN] ${e}`)}function g(e){console.log(`[dotenv@${m}][DEBUG] ${e}`)}function _(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:p.DOTENV_KEY&&p.DOTENV_KEY.length>0?p.DOTENV_KEY:""}function H(e,t){let n;try{n=new URL(t)}catch(a){if(a.code==="ERR_INVALID_URL"){const l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw a}const s=n.password;if(!s){const a=new Error("INVALID_DOTENV_KEY: Missing key part");throw a.code="INVALID_DOTENV_KEY",a}const o=n.searchParams.get("environment");if(!o){const a=new Error("INVALID_DOTENV_KEY: Missing environment part");throw a.code="INVALID_DOTENV_KEY",a}const r=`DOTENV_VAULT_${o.toUpperCase()}`,c=e.parsed[r];if(!c){const a=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw a.code="NOT_FOUND_DOTENV_ENVIRONMENT",a}return{ciphertext:c,key:s}}function b(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const n of e.path)h.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=y.resolve(process.cwd(),".env.vault");return h.existsSync(t)?t:null}function E(e){return e[0]==="~"?y.join(F.homedir(),e.slice(1)):e}function z(e){J("Loading env from encrypted .env.vault");const t=i._parseVault(e);let n=p;return e&&e.processEnv!=null&&(n=e.processEnv),i.populate(n,t,e),{parsed:t}}function X(e){const t=y.resolve(process.cwd(),".env");let n="utf8";const s=!!(e&&e.debug);e&&e.encoding?n=e.encoding:s&&g("No encoding is specified. UTF-8 is used by default");let o=[t];if(e&&e.path)if(!Array.isArray(e.path))o=[E(e.path)];else{o=[];for(const l of e.path)o.push(E(l))}let r;const c={};for(const l of o)try{const d=i.parse(h.readFileSync(l,{encoding:n}));i.populate(c,d,e)}catch(d){s&&g(`Failed to load ${l} ${d.message}`),r=d}let a=p;return e&&e.processEnv!=null&&(a=e.processEnv),i.populate(a,c,e),r?{parsed:c,error:r}:{parsed:c}}function Z(e){if(_(e).length===0)return i.configDotenv(e);const t=b(e);return t?i._configVault(e):(Q(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),i.configDotenv(e))}function ee(e,t){const n=Buffer.from(t.slice(-64),"hex");let s=Buffer.from(e,"base64");const o=s.subarray(0,12),r=s.subarray(-16);s=s.subarray(12,-16);try{const c=U.createDecipheriv("aes-256-gcm",n,o);return c.setAuthTag(r),`${c.update(s)}${c.final()}`}catch(c){const a=c instanceof RangeError,l=c.message==="Invalid key length",d=c.message==="Unsupported state or unable to authenticate data";if(a||l){const f=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw f.code="INVALID_DOTENV_KEY",f}else if(d){const f=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw f.code="DECRYPTION_FAILED",f}else throw c}}function te(e,t,n={}){const s=!!(n&&n.debug),o=!!(n&&n.override);if(typeof t!="object"){const r=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw r.code="OBJECT_REQUIRED",r}for(const r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(o===!0&&(e[r]=t[r]),s&&g(o===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}const i={configDotenv:X,_configVault:z,_parseVault:G,config:Z,decrypt:ee,parse:W,populate:te};u.exports.configDotenv=i.configDotenv;u.exports._configVault=i._configVault;u.exports._parseVault=i._parseVault;u.exports.config=i.config;u.exports.decrypt=i.decrypt;u.exports.parse=i.parse;u.exports.populate=i.populate;u.exports=i;var re=u.exports;const ne=D(re);var oe={};ne.config();const se=oe.RECIPE_API_KEY,ce="https://api.spoonacular.com/recipes";async function ae(e){const t=`${ce}/complexSearch?query=${e}&apiKey=${se}`;try{const n=await fetch(t);if(!n.ok)throw new Error("Network response was not ok");return(await n.json()).results}catch(n){throw console.error("Error fetching recipes:",n),n}}const ie=document.getElementById("search-bar"),le=document.getElementById("recipe-list");ie.addEventListener("input",async e=>{const t=e.target.value.trim();if(t.length>2){const n=await ae(t);ue(n)}});function ue(e){le.innerHTML=e.map(t=>`
      <div class="recipe-card">
        <h3>${t.title}</h3>
        <img src="${t.image}" alt="${t.title}">
      </div>
    `).join("")}
